/* Занятие 8
Задание 1
На базе обычного массива (коллекции .NET не использовать) реализовать свой собственный класс DynamicArray, представляющий собой массив с запасом. Элементами созданной коллекции могут быть только объекты, имеющие конструктор без параметров. Класс должен содержать:

Конструктор:

Конструктор без параметров (создается массив емкостью 8 элементов). 
Конструктор с 1 целочисленным параметром (создается массив заданной емкости). 
Конструктор, который в качестве параметра принимает массив. 
Методы:

Метод Add, добавляющий в конец массива один элемент. При нехватке места для добавления элемента емкость массива должна расширяться в 2 раза. 
Метод AddRange, добавляющий в конец массива содержимое переданного массива. Обратите внимание, метод должен корректно учитывать число элементов в коллекции с тем, чтобы при необходимости расширения массива делать это только один раз вне зависимости от числа элементов в добавляемой коллекции. 
Метод Remove, удаляющий из коллекции указанный элемент. Метод должен возвращать true, если удаление прошло успешно и false в противном случае. При удалении элементов реальная емкость массива не должна уменьшаться. 
Метод Insert, позволяющий добавить элемент в произвольную позицию массива (обратите внимание, может потребоваться расширить массив). При выходе за границу массива должно генерироваться исключение ArgumentOutOfRangeException. 
Свойства и индексаторы:

Свойство Length – получение длины заполненной части массива. 
Свойство Capacity – получение реальной ёмкости массива. 
Индексатор, позволяющий работать с элементом с указанным номером. При выходе за границу массива должно генерироваться исключение ArgumentOutOfRangeException. 
 */

using System;

namespace Alyabiev.Task08.Task1
{
	class Program1
	{
		public static void Main(string[] args)
		{
			Console.WriteLine("[Task 08 - 1] DynamicArray.\n");

			var da = new DynamicArray<string>(new[] { "abc", "def", "ghi", "jkl" });
			Output("1. init:", da);

			da.Insert("xyz", 2);
			Output("2a. insert at 2:", da);

			da.Insert("xyz2", 5);
			Output("2b. insert at 5:", da);

			da.Add("abc-new");
			Output("3. Add:", da);

			da.Remove(2);
			da.Remove(4);
			da.Remove(4);
			Output("4. Remove:", da);

			da.AddRange( new DynamicArray<string>( "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15".Split(' ') ));
			Output("5. AddRange:", da);

			Console.Write("[!] finished.");
			Console.ReadKey(true);
		}

		static void Output(string message, DynamicArray<string> da)
		{
			Console.WriteLine(message);
			for (int i = 0; i < da.Length; i++)
			{
				Console.Write($"{da[i]}, ");
			}
			Console.WriteLine();
			Console.WriteLine();
		}
	}
}